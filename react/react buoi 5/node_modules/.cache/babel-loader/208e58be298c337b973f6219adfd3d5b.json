{"ast":null,"code":"var _jsxFileName = \"/Users/Tuan/react-game/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport rock from './image/rock.png';\nimport paper from './image/paper.png';\nimport scissors from './image/scissors.png';\nimport OverLay from './component/OverLay';\nimport Score from './component/Score';\nimport PlayerVsComputer from './component/PlayerVsComputer';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [player, setPlayer] = useState(scissors);\n  const [computer, setComputer] = useState(scissors);\n  const [win, setWin] = useState(0);\n  const [draw, setDraw] = useState(0);\n  const [lose, setLose] = useState(0);\n  const [total, setTotal] = useState(0);\n\n  function click(playerRoll) {\n    if (playerRoll === 1) {\n      setPlayer(rock);\n    }\n\n    if (playerRoll === 2) {\n      setPlayer(paper);\n    }\n\n    if (playerRoll === 3) {\n      setPlayer(scissors);\n    }\n\n    let computerRoll = Math.floor(Math.random() * 3 + 1);\n\n    if (computerRoll === 1) {\n      setComputer(rock);\n    }\n\n    if (computerRoll === 2) {\n      setComputer(paper);\n    }\n\n    if (computerRoll === 3) {\n      setComputer(scissors);\n    }\n\n    if (playerRoll === computerRoll) {\n      setDraw(draw + 1);\n      setTotal(total + 1);\n    } else if (playerRoll === 1 && computerRoll === 2) {\n      setLose(lose + 1);\n      setTotal(total + 1);\n    } else if (playerRoll === 1 && computerRoll === 3) {\n      setWin(win + 1);\n      setTotal(total + 1);\n    } else if (playerRoll === 2 && computerRoll === 1) {\n      setWin(win + 1);\n      setTotal(total + 1);\n    } else if (playerRoll === 2 && computerRoll === 3) {\n      setLose(lose + 1);\n      setTotal(total + 1);\n    } else if (playerRoll === 3 && computerRoll === 1) {\n      setLose(lose + 1);\n      setTotal(total + 1);\n    } else if (playerRoll === 3 && computerRoll === 2) {\n      setWin(win + 1);\n      setTotal(total + 1);\n    }\n  }\n\n  let reset = () => {\n    setWin(0);\n    setLose(0);\n    setDraw(0);\n    setTotal(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [total === 10 ? /*#__PURE__*/_jsxDEV(OverLay, {\n      win: win,\n      lose: lose,\n      draw: draw,\n      reset: reset\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"status\",\n      children: \"Rock paper scissors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(PlayerVsComputer, {\n        player: player,\n        computer: computer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Choices, {\n        rock: rock,\n        paper: paper,\n        scissors: scissors,\n        click: click\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Score, {\n        win: win,\n        draw: draw,\n        lose: lose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: reset,\n        children: \"Reset score\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"jxyTKGlgSj+GukdMnXZy2jOlDRM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Tuan/react-game/src/App.js"],"names":["rock","paper","scissors","OverLay","Score","PlayerVsComputer","useState","App","player","setPlayer","computer","setComputer","win","setWin","draw","setDraw","lose","setLose","total","setTotal","click","playerRoll","computerRoll","Math","floor","random","reset"],"mappings":"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","sourcesContent":["import './App.css';\nimport rock from './image/rock.png';\nimport paper from './image/paper.png';\nimport scissors from './image/scissors.png';\nimport OverLay from './component/OverLay';\nimport Score from './component/Score';\nimport PlayerVsComputer from './component/PlayerVsComputer';\nimport { useState } from 'react';\n\nfunction App() {\n  const [player, setPlayer] = useState(scissors);\n  const [computer, setComputer] = useState(scissors);\n  const [win, setWin] = useState(0);\n  const [draw, setDraw] = useState(0);\n  const [lose, setLose] = useState(0);\n  const [total, setTotal] = useState(0);\n\n  function click(playerRoll) {\n    if (playerRoll === 1) {\n      setPlayer(rock);\n    }\n    if (playerRoll === 2) {\n      setPlayer(paper);\n    }\n    if (playerRoll === 3) {\n      setPlayer(scissors);\n    }\n    \n    let computerRoll = Math.floor(Math.random() * 3 + 1);\n\n    if (computerRoll === 1) {\n      setComputer(rock)\n    }\n    if (computerRoll === 2) {\n      setComputer(paper)\n    }\n    if (computerRoll  === 3) {\n      setComputer(scissors)\n    }\n\n    if (playerRoll === computerRoll) {\n      setDraw(draw + 1);\n      setTotal(total + 1);\n    }\n    else if (playerRoll === 1 && computerRoll === 2) {\n      setLose(lose + 1);\n      setTotal(total + 1);\n    }\n    else if (playerRoll === 1 && computerRoll === 3) {\n      setWin(win + 1);\n      setTotal(total + 1);\n    }\n    else if (playerRoll === 2 && computerRoll === 1) {\n      setWin(win + 1);\n      setTotal(total + 1);\n    }\n    else if (playerRoll === 2 && computerRoll === 3) {\n      setLose(lose + 1);\n      setTotal(total + 1);\n    }\n    else if (playerRoll === 3 && computerRoll === 1) {\n      setLose(lose + 1);\n      setTotal(total + 1);\n    }\n    else if (playerRoll === 3 && computerRoll === 2) {\n      setWin(win + 1);\n      setTotal(total + 1);\n    }\n  }\n\n  let reset = () => {\n    setWin(0);\n    setLose(0);\n    setDraw(0);\n    setTotal(0);\n  }\n\n  return (\n    <div className=\"App\">\n\n      {total === 10 ? (\n        <OverLay\n          win={win}\n          lose={lose}\n          draw={draw}\n          reset={reset}\n        />\n      ) : null}\n      \n      <h1 className=\"status\">Rock paper scissors</h1>\n      <div className=\"container\">\n\n        <PlayerVsComputer\n          player={player}\n          computer={computer}\n        />\n\n        <Choices\n          rock={rock}\n          paper={paper}\n          scissors={scissors}\n          click={click}\n        />\n\n        <Score\n          win={win}\n          draw={draw}\n          lose={lose}\n        />\n        \n        <button className=\"btn btn-primary\" onClick={reset}>Reset score</button>\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}